Problem #1     Block System call : 






Problem #2 :  play with directory

 1 create a directory without name from command line
 2 create a directory with name "-okgoogle"
 
 1 mkdir " " : this will create a directory without name(by giving space bar in between "") as name and won't be visible in HOME folder in GUI form.
 2 directory whose name starts with - (eg -okgoogle) in bash,If we are try so bash will treat the name as command line argument and we will get the error as
 mkdir: invalid option -- 'o'
 so Prefix the directory name with a ./ to avoid having it interpreted as an option:
 mkdir ./-okgoogle
 Alternatively, insert the argument -- (two dashes), which causes all arguments following it to be interpreted as file names and not as options:
 mkdir -- -okgoogle


Problem #3 :  create a directory structure 
mkdir -p A/{B/{G/K/reboot.txt,H/J/reboot.txt},C/{I/J/L/reboot.txt},D/{F/L/reboot.txt,E/M/reboot.txt}}
tree A

Problem #4.  share and files and folder 


create two users name jack and Jill  from command line
create all the data under home directory of each users 
login with jack user and create a file name  jack.txt using vim editor and write "hello jack"
from jack user also create two directories name jack1 & jack2 
now login from Jill user and create a file. Jill.txt using vim editor and write "hey jiil"
from Jill also create two directoires named jill1 & jill2 

Important :  swap these files and directories in between users  and to swap don't use root account.

1.Logged into root account then:
adduser jack
passwd jack
adduser jill
passwd jill

2.Logged into jack account:
chmod 0777 /home/jack
touch jack.txt
vim jack.txt
   -> press i to insert text
   -> type "hello jack"
   -> press esc then : then wq then enter
mkdir jack1 jack2

3.Logged into jill account:
chmod 0777 /home/jill
touch jill.txt
vim jill.txt
   -> press i to insert text
   -> type "heyy jill"
   -> press esc then : then wq then enter
 mkdir jill1 jill2
 
 4. cp -r /home/jack/jack.txt /home/jill/jill.txt  
    #-r is used because we are ommiting directory and copy them recursively
    cp -r /home/jack/jack1 /home/jill/jill1
    cp -r /home/jack/jack2 /home/jill/jill2
    
    su Jack
    cp -r /home/jill/jill.txt /home/jack/jack.txt
    cp -r /home/jill/jill1 /home/jack/jack1
    cp -r /home/jill/jill2 /home/jack/jack2
    
    
   ##Question : How to delete a particular entry from History without showing the command for that in history?
   vim .bashrc
                 ##Under export section
   export HISTIGNORE="history [-d offset] [n]"
   esc:wq
                 ## now fire history -d [n] 
                 ## here n is the no. of line on which command to be deleted is present
                 ##now fire history


Problem #5 :  play with files and directories 

  ##create  3 files named   abc.txt  ok  fine  g.txt  /tmp directory 
  ##create  4  directories   aa aaa aaaa  under  /tmp directory 
  ##give ls command to  list the content of  /tmp directory 
  ##make sure it will only list the content (file|directory)  having 2 char in their name.
  
  cd /tmp                            ## change directory from home to /tmp
  touch abc.txt ok/ fine g.txt       ## make files ,if there is space in between a file name we use '/'
  mkdir aa aaa aaaa                  ## make directories
  ls -d ??                           ## -d option is used to show directories as well with files and to differentiate between file and directories as well
                                     ##'?' is a wild card character used to represent a single character it is used twice to search for the 2 characters.
   
   
   problem #6:  run command without any output 

  ##open terminal and type any command 
  ##once you press enter your output of given command must not  print
  ##you are not allowed to redirect output anywhere 

vim .bashrc #open .bashrc file and edit
stty intr ^M #insert this to set terminal device i.e. the role of interrupt is assigned to enter key so whenever we fire a command and hit enter no output is shown.



